<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd"
        default-lazy-init ="true">

    <!--spring容器负责对象创建-->

    <!-- dataSource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/tenement" />
        <property name="username" value="root" />
        <property name="password" value="0221" />

    </bean>

    <bean id="sessionFactory"
      class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>

    <bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 不要自己去关闭session，session在事务结束后都会自动关闭。 -->
    <!-- 配置hibernate事务管理器 封装了所有commit,rollback等事务操作. -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />

        <property name="dataSource" ref="dataSource" />

    </bean>

    <!-- 启用事务注解扫描 开启使用注解管理aop事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 以方法为单位,指定方法应用什么事务属性 isolation:隔离级别 propagation:传播行为 read-only:对数据库是否只读 -->
            <tx:method name="save*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
            <tx:method name="persist*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
            <tx:method name="update*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
            <tx:method name="modify*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
            <tx:method name="delete*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
            <tx:method name="remove*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
            <tx:method name="get*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="true" />
            <tx:method name="transfer" isolation="REPEATABLE_READ"
                       propagation="REQUIRED" read-only="false" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置织入 -->
    <aop:config>
        <!-- 配置切点表达式 -->
        <aop:pointcut id="txPc" expression="execution(* service.impl.*ServiceImpl.*(..))" />
        <!-- 配置切面 : 通知+切点 advice-ref:通知的名称 pointcut-ref:切点的名称 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
    </aop:config>

    <!-- 配置事务拦截器 -->
    <bean id="transactionInterceptor"
          class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager">
            <!--<ref bean="transactionManger" />-->
        </property>
        <!-- 下面定义事务传播属性 -->
        <property name="transactionAttributes">
            <props>
                <prop key="find*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="merge*">PROPAGATION_REQUIRED</prop>
                <prop key="attach*">PROPAGATION_REQUIRED</prop>
                <prop key="gotoPage">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <!-- 自动代理 -->
    <bean id="autoBeanNameProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>*Dao</value>
                <value>gotoPage</value>
                <value>find</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <!--<idref local="transactionInterceptor" />-->
                <idref bean="transactionInterceptor" />
            </list>
        </property>

        <!--
        这里的配置是必须的，否则无法完成代理的类型转化
        这是使用CGLIB来生成代理
        -->
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!-- Model -->
    <bean id="user" class="model.User"/><!-- lazy-init="false"-->
    <bean id="agent" class="model.Agent" />
    <bean id="admin" class="model.Administrator" />
    <bean id="house" class="model.House" />
    <bean id="city" class="model.City" />
    <bean id="district" class="model.District" />
    <bean id="plot" class="model.Plot" />
    <bean id="chat" class="model.Chat"/>
    <bean id="order" class="model.Order"/>
    <bean id="discussion" class="model.DiscussionSection" />
    <bean id="landlordApplyRelease" class="model.LandlordApplyRelease"/>
    <bean id="PageBean" class="model.PageBean"/>
    <bean id="houseInfor" class="model.HouseInfo"/>

    <!-- DaoImpl -->
    <bean id="userDao" class="dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory">
            <!--<ref bean="sessionFactory" />-->
        </property>
    </bean>
    <bean id="adminDao" class="dao.impl.AdminDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="searchDao" class="dao.impl.SearchDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="chatDao" class="dao.impl.ChatDaoImpl">
        <property name="sessionFactory" ref="sessionFactory">

        </property>
    </bean>
    <bean id="orderDao" class="dao.impl.OrderDaoImpl">
        <property name="sessionFactory" ref="sessionFactory">

        </property>
    </bean>
    <bean id="houseDao" class="dao.impl.HouseDaoImpl">
        <property name="sessionFactory" ref="sessionFactory">

        </property>
    </bean>
    <bean id="agentDao" class="dao.impl.AgentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory">

        </property>
    </bean>
    <bean id = "agentShowDao" class="dao.impl.AgentShowDaoImpl">
        <property  name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id = "updateDao" class="dao.impl.UpdateDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- ServiceImpl -->
    <bean id="userService" class="service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
    </bean>
    <bean id="adminService" class="service.impl.AdminServiceImpl">
        <property name="adminDao" ref="adminDao" />
    </bean>
    <bean id="searchService" class="service.impl.SearchServiceImpl">
        <property name="searchDao" ref="searchDao" />
    </bean>
    <bean id="chatService" class="service.impl.ChatServiceImpl">
        <property name="chatDao" ref="chatDao" />
    </bean>
    <bean id="orderService" class="service.impl.OrderServiceImpl">
        <property name="orderDao" ref="orderDao" />
    </bean>
    <bean id="houseService" class="service.impl.HouseServiceImpl">
        <property name="houseDao" ref="houseDao"/>
    </bean>
    <bean id="agentService" class="service.impl.AgentServiceImpl">
        <property name="agentDao" ref="agentDao"/>
    </bean>
    <bean id = "agentShowService" class="service.impl.AgentShowImpl">
        <property name="agentShowDao" ref="agentShowDao"/>
    </bean>
    <bean id = "updateService" class="service.impl.UpdateServiceImpl">
        <property name="updateDao" ref="updateDao"/>
    </bean>

    <!-- registerAction -->
    <bean id="register" class="action.Register" scope="prototype">
        <property name="userService" ref="userService"/>
        <property name="user" ref="user"/>
        <property name="telephone" value="18810339310" /><!-- 简单属性赋value -->
        <property name="password1" value="1" />
        <property name="password2" value="1" />
    </bean>
    <!-- loginAction -->
    <bean id="login" class="action.Login" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="user" ref="user" />
        <property name="agent" ref="agent" />
        <property name="administrator" ref="admin" />
        <property name="telephone" value="18810339310" />
        <property name="password" value="1" />
        <property name="role" value="user" />
    </bean>
    <!-- userDisplayAction -->
    <bean id="userDisplay" class="action.AdminDisplay" scope="prototype">
        <property name="adminService" ref="adminService" />
    </bean>
    <!-- 关键字搜索action -->
    <bean id="searchHouseByKeyword" class="action.KeywordSearch" scope="prototype">
        <property name="searchService" ref="searchService" />
        <property name="condition" value="天通苑" />
    </bean>

    <bean id="modifyUser" class="action.UserQuery">
        <property name="userService" ref="userService" />
        <property name="user" ref="user" />
    </bean>
    <bean id="deleteUser" class="action.AdminDelete" scope="prototype">
        <property name="adminService" ref="adminService" />
        <property name="userId" value="1" />
    </bean>
    <bean id="searchUser" class="action.KeywordSearch" scope="prototype">
        <property name="searchService" ref="searchService" />
        <property name="condition" value="1" />
    </bean>
    <bean id="agentDisplay" class="action.AdminDisplay" scope="prototype">
        <property name="adminService" ref="adminService" />
    </bean>
    <bean id="deleteAgent" class="action.AdminDelete" scope="prototype">
        <property name="adminService" ref="adminService" />
        <property name="agentId" value="1" />
    </bean>
    <bean id="agentSearch" class="action.KeywordSearch" scope="prototype">
        <property name="searchService" ref="searchService" />
        <property name="condition" value="1" />
    </bean>
    <bean id="insertAgent" class="action.AdminInsert" scope="prototype">
        <property name="adminService" ref="adminService" />
        <property name="agent" ref="agent" />
        <property name="agentPassword" value="123456" />
        <property name="agentTelephone" value="18810339310" />
        <property name="agentName" value="Lime" />
    </bean>
    <bean id="searchMyHouse" class="action.UserQuery" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="userId" value="1" />
    </bean>
    <!--<bean id="searchMyRental" class="action.UserQuery" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="userId" value="1" />
    </bean>-->
    <bean id="getContract" class="action.UserQuery" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="houseId" value="1" />
    </bean>
    <bean id="getContractAsTenant" class="action.UserQuery" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="houseId" value="1" />
        <property name="userId" value="1" />
    </bean>
    <bean id="getMyOrders" class="action.UserQuery" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="userId" value="1" />
    </bean>
    <bean id="modifyOderStatus" class="action.UserQuery" scope="prototype">
        <property name="userService" ref="userService" />
        <property name="orderId" value="1" />
    </bean>
    <bean id="houseDisplay" class="action.AdminDisplay">
        <property name="adminService" ref="adminService" />
    </bean>
    <bean id="deleteHouse" class="action.AdminDelete" scope="prototype">
        <property name="adminService" ref="adminService" />
        <property name="houseId" value="1" />
    </bean>
    <bean id="adminHouseSearch" class="action.KeywordSearch" scope="prototype">
        <property name="searchService" ref="searchService" />
        <property name="condition" value="188" />
    </bean>
    <bean id="cityDisplay" class="action.AdminDisplay">
        <property name="adminService" ref="adminService" />
    </bean>
    <bean id="searchCity" class="action.KeywordSearch">
        <property name="searchService" ref="searchService" />
        <property name="condition" value="1" />
    </bean>
    <bean id="modifyCity" class="action.AdminUpdate">
        <property name="adminService" ref="adminService" />
        <property name="cityId" value="1" />
        <property name="cityName" value="北京市" />
    </bean>
    <bean id="addCity" class="action.AdminInsert">
        <property name="adminService" ref="adminService" />
        <property name="cityName" value="北京市" />
        <property name="city" ref="city" />
    </bean>
    <bean id="deleteCity" class="action.AdminDelete">
        <property name="adminService" ref="adminService" />
        <property name="cityId" value="1" />
    </bean>
    <bean id="districtDisplay" class="action.AdminDisplay">
        <property name="adminService" ref="adminService" />
    </bean>
    <bean id="modifyDistrict" class="action.AdminUpdate">
        <property name="adminService" ref="adminService" />
        <property name="cityId" value="1" />
        <property name="districtId" value="1" />
        <property name="districtName" value="海淀区" />
    </bean>
    <bean id="addDistrict" class="action.AdminInsert">
        <property name="adminService" ref="adminService" />
        <property name="district" ref="district" />
        <property name="districtName" value="海淀区" />
        <property name="cityId" value="1" />
    </bean>
    <bean id="deleteDistrict" class="action.AdminDelete">
        <property name="adminService" ref="adminService" />
        <property name="districtId" value="1" />
    </bean>
    <bean id="searchDistrict" class="action.KeywordSearch">
        <property name="searchService" ref="searchService" />
        <property name="condition" value="1" />
    </bean>
    <bean id="plotDisplay" class="action.AdminDisplay">
        <property name="adminService" ref="adminService" />
    </bean>
    <bean id="searchPlot" class="action.KeywordSearch">
        <property name="condition" value="1" />
        <property name="searchService" ref="searchService" />
    </bean>
    <bean id="deletePlot" class="action.AdminDelete">
        <property name="adminService" ref="adminService" />
        <property name="plotId" value="1" />
    </bean>
    <bean id="addPlot" class="action.AdminInsert">
        <property name="adminService" ref="adminService" />
        <property name="cityId" value="1" />
        <property name="districtId" value="1" />
        <property name="agentId" value="1" />
        <property name="plotName" value="宏福小区" />
        <property name="plot" ref="plot" />
    </bean>
    <bean id="saveChatRecord" class="action.SaveChatRecord" scope="prototype">
        <property name="chatService" ref="chatService" />
    </bean>
    <bean id="getAllOrder" class="action.GetAllOrder" scope="prototype">
        <property name="orderService" ref="orderService"/>
    </bean>
    <bean id="deleteOrder" class="action.DeleteOrder" scope="prototype">
        <property name="orderService" ref="orderService"/>
    </bean>
    <bean id="getOrderDetail" class="action.GetOrderDetail" scope="prototype">
        <property name="orderService" ref="orderService"/>
        <property name="houseService" ref="houseService"/>
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="getOrderByOrderID" class="action.GetOrderByOrderID" scope="prototype">
        <property name="orderService" ref="orderService"/>
    </bean>
    <bean id="searchAgent" class="action.SearchAgent" scope="prototype">
        <property name="orderService" ref="orderService"/>
        <property name="agentService" ref="agentService"/>
    </bean>
    <bean id="getDateByDateRange" class="action.GetOrderByDateRange" scope="prototype">
        <property name="orderService" ref="orderService"/>
    </bean>
    <bean id="searchOrderByUserInfo" class="action.SearchOrderByUserInfo" scope="prototype">
        <property name="orderService" ref="orderService"/>
        <property name="userService" ref="userService"/>
    </bean>
    <!--agent相关的action-->
    <bean id="addOrder" class="action.AddOrder" scope="prototype">
        <property name="orderService" ref="orderService" />
        <property name="order" ref="order" />
    </bean>
    <bean id="getMyOrder" class="action.GetMyOrder" scope="prototype">
        <property name="orderService" ref="orderService"/>
    </bean>

    <bean id="messageSubmit" class="action.messageSubmit" scope="prototype">
        <property name="discussionSection" ref="discussion" />
        <property name="userService" ref="userService"/>
        <property name="user" ref="user"/>

    </bean>
    <bean id="messageShow" class="action.messageShow" scope="prototype">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="houseSubmit" class="action.HouseSubmit" scope="prototype">
        <property name="userService" ref="userService"/>
        <property name="landlordApplyRelease" ref="landlordApplyRelease"/>
    </bean>
    <bean id="houseConfirm" class="action.HouseConfirm" scope="prototype">
        <property name="userService" ref="userService"/>
        <property name="house" ref="house"/>
    </bean>
    <bean id="conditionSearch" class="action.ConditionSearch" scope="prototype">
        <property name="searchService" ref="searchService" />
        <property name="housing" ref="house" />
    </bean>
    <bean id="HouseInfo" class="action.GetHouseInfo" scope="prototype">
        <property name="searchService" ref="searchService" />
        <property name="houseId" value="1" />
    </bean>
    <bean id ="getMyHouse" class="action.getMyHouse" scope="prototype">
        <property name="agentShowService" ref="agentShowService"/>
        <property name="pageBean" ref="PageBean" />
        <property name="page" value="1" />
    </bean>
    <bean id = "updateHouse" class="action.UpdateHouse" scope="prototype">
        <property name="updateService" ref="updateService"/>
        <property name="plotname" value="宏福"/>
        <property name="landlordName" value="刘一憬"/>
        <property name="address" value="北邮"/>
        <property name="rent" value="100.0"/>
        <property name="housetype" value="三室1厅"/>
        <property name="floor" value="1"/>
        <property name="area" value="100.1"/>
        <property name="housedescription" value="没电没水没工具"/>
        <property name="houseID" value="1"/>

        <property name="houseInfor" ref="houseInfor"/>
    </bean>



    <bean id="logService" class="service.impl.LogServiceImpl">
    </bean>

    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut
                expression="execution(* service.impl.*ServiceImpl.*(..))" id="myPointcut" />

        <!-- 切面： 将哪个对象中的哪个方法，织入到哪个切入点 -->
        <aop:aspect id="dd" ref="logService">

            <!-- 前置通知
            <aop:before method="log" pointcut-ref="myPointcut" />
            <aop:after method="logArg" pointcut-ref="myPointcut">
            -->
            <aop:after-returning method="logArgAndReturn" returning="returnObj" pointcut-ref="myPointcut"/>

        </aop:aspect>

    </aop:config>
</beans>
